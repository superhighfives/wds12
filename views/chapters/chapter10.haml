:markdown

  ## <span class="ss-icon">exclamationchat</span> Four things to remember
  ### Chapter 10

  Right. So. **Four things to take away.**

  #### <span class="ss-icon">rules</span> 1. Plan ahead

  **Web development is sort of like a ball of thread.** If you don’t plan, it’s surprisingly easy to end up with a big of tangled mess. 

  **Not planning is a recipe for disaster.** The joy of working on your own projects is that you can plan them out at your leisure. No deadlines, no panic attacks, no stress. And that doesn’t mean you need Microsoft Word. I recommend using a pen and paper. Jot down your ideas, sketch our your layouts, lay out your core workflow. It can be an incredibly helpful way of iterating your work (be it design or development), and even when you’re in Photoshop, or Fireworks, or build, you can always jump back between them.

  #### <span class="ss-icon">scissors</span> 2. Design to build

  **The best thing, as a designer, about learning to build sites is that it allows you to better design sites.** You’ll start to see the potential pitfalls of certain layouts, of certain typographic treatments, and of certain conceptual decisions. And that means faster, happier and more effective development. Costs go down, stress goes down, everyone wins. Now, that’s not always possible, but that’s why we need to manage our clients, especially in ad land, to get the best possible results for the user and the customer, not for personal taste. That’s why I am such a big advocate for A/B testing. As Jim Barksdale said:

  > "If we have data, let’s look at data. If all we have are opinions, let’s go with mine."
  > ### Jim Barksdale (Former CEO of Netscape)

  That, to me, is what web development is all about. It’s hard, especially in larger scale organisations, but we have the means to test our work - focus testing can be done cheaply online, we can A/B test in the wild, and we use heatmaps to see what our users are actually interacting with. Don’t paint yourself into a corner with your designs. Try and build a collaborative relationship with your clients or users that will give them the trust to allow you to work in a way that doesn’t necessarily line up with traditional media.

  #### <span class="ss-icon">pixels</span> 3. Less is more

  **For design, this means keeping things simple.** The best design solves a problem, so start by looking at what you can take out. One of my favourite design movements recently is the mobile-first theory. Design for a tiny screen. Then scale up. It’s surprisingly how little you need to get a site started.
  
  **For development, ship early, ship often.** Remember what the core thing you’re trying to make is, and make that. Put it live. If people respond, keep working on it, if they don’t you have an opportunity to go back to the drawing board.

  #### <span class="ss-icon">chats</span> 4. Ask more questions

  **And finally, ask more questions.** Get onto [Stack Overflow](http://stackoverflow.com/), get onto Google groups, attend meetups, make your own podcast, build things, help one another. There is nothing, literally nothing, in the way of you sharing your knowledge. Start a blog. If you fix something, show people how you fixed it.

  ** Your Internet needs you!**