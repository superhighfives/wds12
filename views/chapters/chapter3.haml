:markdown

  ## <span class="ss-icon">question</span> So, What Do I Need To Know?
  ### Chapter 3

  #### <span class="ss-icon">onedie</span> HTML + CSS

  If you're currently working as a designer, but dabbling in some web work, I'd recommend introducing yourself to HTML and CSS.

  #### <span class="ss-icon">twodie</span> HTML + CSS + JS

  If you're a web designer who knows a couple of things, and you've built some simple sites, but you're not really sure where to go from here, I'd recommend challenging yourself with adding interactivity with [JavaScript](http://www.codecademy.com/tracks/javascript "Codecademy JavaScript foundations") and [jQuery](http://jquery.com/), or looking at the awesome stuff in [CSS3](http://css3generator.com/ "CSS3 Generator"). Build something tougher, essentially.

  #### <span class="ss-icon">threedie</span> THAT + PHP

  Or you could start doing some simple stuff in [PHP](http://php.net/), which doesn't have as much of a learning curve as [Ruby](http://www.ruby-lang.org/) and can be hosted on almost any server in the universe.

  #### <span class="ss-icon">fourdie</span> THAT + PYTHON

  Or you could check out [Python](http://www.python.org/) and give that a shot.

  #### <span class="ss-icon">fivedie</span> THAT + RUBY

  If you're looking to learn a back end language, I'd recommend [Ruby](http://www.ruby-lang.org/) because I write it, and because the incredible [Why The Lucky Stiff](http://en.wikipedia.org/wiki/Why_the_lucky_stiff) (I know, I know, what an incredibly rad name) wrote a wonderful free book called ["Why's Poignant Guide To Ruby"](http://mislav.uniqpath.com/poignant-guide/).

  <a href='http://mislav.uniqpath.com/poignant-guide/'>
    <figure>
      <img src='/images/im-why.jpg' title="Why's Poignant Guide To Ruby" />
      <figcaption>
        <strong>Above:</strong>
        Why's Poignant Guide To Ruby. It's a wild book.
      </figcaption>
    </figure>
  </a>

  I love it so much it's offensive. It’s one of the most bizarre, hilarious and quirky explorations of a programming language. And it’s free online. The sheer amount of effort that has gone into the storytelling and illustrations is incredible. If you take one thing away from this whole take - this is probably it.

  > "There are just two kinds of languages: the ones everybody complains about and the ones nobody uses."
  > ### Bjarne Stroustrup (Designer of C++)

  #### <span class="ss-icon">frown</span> On languages, everyone hates everything.

  People hate Ruby because it doesn't scale (it does), and people hate PHP because it has some ridiculous quirks (it does, but so do I), and people hate .NET because it's clunky (I've never written it so I probably shouldn't comment on it?), and everyone hates everything because of a million reasons that may or may not be true.

  <a href='http://en.wikipedia.org/wiki/List_of_programming_languages'>
    <figure>
      <img src='/images/im-rubygem.gif' title="A list of languages on Wikipedia" />
      <figcaption>
        There are a lot of languages.
      </figcaption>
    </figure>
  </a>

  It doesn't really matter in the end. [Twitter](http://twitter.com/) was built on Ruby, and [Facebook](http://facebook.com) was built on PHP, [loads of stuff is built with Python](http://stamen.com/ "Stamen use Python heaps, and they're awesome."). There are no truly bad languages, except maybe [Actionscript 2](http://en.wikipedia.org/wiki/ActionScript#ActionScript_2.0 "Urgh. I strongly dislike Actionscript 2.").

  #### <span class="ss-icon">sixdie</span> RUBY + SINATRA + HAML + SASS (Oh my!)

  Personally, I primarily use these, if I’m not doing something fancy with databases. Now, if you haven’t built much in the way of HTML and CSS before, this might be a bit of a leap. But I think my favourite thing about Ruby is that it allows you to hack really easily. To build little things. So let’s explore what these four things mean, if you’re not already aware.

  #### Ruby is a Japanese programming language.

  Ruby was first designed and developed in 1993, by [Yukihiro "Matz" Matsumoto](http://en.wikipedia.org/wiki/Yukihiro_Matsumoto) in Japan. At a [Google Tech Talk in 2008](http://www.youtube.com/watch?v=oEkJvvGEtB4) Matsumoto stated:

  > "I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language."
  > ### Yukihiro "Matz" Matsumoto (Inventor of Ruby)

  That’s also the main purpose **OF MY LIFE.**

  #### Sinatra is a simple application framework

  [Sinatra](http://sinatrarb.com) allows you to quickly create web applications in Ruby with minimal effort. At its most basic, you tell it some locations and the things you want it to show, and it will. **It’s also named after Frank Sinatra**. You win this round, Internet.

  #### HAML is simplified HTML

  [HAML](http://haml.info/) allows you to write shorthand HTML without repeating yourself, and is the backbone of many, many ruby applications. HAML turns into HTML, so you don’t have strain those weary hands of yours.

  #### SASS is syntactically awesome CSS

  [Sass](http://sass-lang.com/) is an extension of CSS3, adding a bunch of features to make styling pages really clean and simple. It’s translated to well-formatted, standard CSS, which is then served to the browser.

  #### Git + Github make version control and social coding easy

  [Git](http://git-scm.com/) is a version control system that allows you to keep track of your code as you work on it. It also allows you to share code amongst teams, keep backups of all iterations of your work and is generally great. It’s similar to [Subversion](http://subversion.apache.org/) (SVN), an alternative version control option. [Github](http://github.com/) is a social coding site for sharing and documenting code and projects. It’s free and awesome, too.

  #### Heroku is for hosting applications

  [Heroku](http://heroku.com) is a deployment platform for Ruby (and a bunch of other languages.) It’s a really simple way of deploying something up into the world wide web and scaling it up as you become super famous. It can be expensive though, but there are alternatively available. I just really like their design.

  #### = Joy! (And making things!)

  Together these form the basis of a lot of the projects I work on. Should I need more grunt I use [Ruby on Rails](http://rubyonrails.org/), which is a more complex framework based on the MVC (model view controller) methodology. [Later on I’ll take you through setting up a Sinatra app, using HAML and SASS, putting it on Github and deploying it to Heroku](#skip-to-chapter-8 "Skip to 'Making Something Awesome'"). Then you can go and make awesome things, and send them to me, and we’ll digitally high five, and it will be great.


  #### <span class="ss-icon">like</span> An aside on how great you are

  I think it's worth mentioning, anyone who tells you that the language you're using is terrible or that the code that you're writing is terrible or that your ideas are terrible are just really boring. Don't let that hot air balloon of your boundless self esteem be deflated by cranky humans.

  You are great. You have great hair, and a great fashion sense, and you're doing good. There is a big difference between constructive criticism and being a giant jerk face. Life is short - if someone is making you feel crummy, they're probably not worth your time.

  **End aside!**